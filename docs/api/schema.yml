openapi: 3.0.3
info:
  title: Embever IoT Core API
  version: 1.0.0
  description: 'Embever IoT Core '
paths:
  /v1/:
    get:
      operationId: v1_retrieve
      description: |-
        list:
        Return a list of endpoints
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/accounts/:
    get:
      operationId: v1_accounts_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccountReadList'
          description: ''
    post:
      operationId: v1_accounts_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountWrite'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountWrite'
          description: ''
  /v1/accounts/{id}:
    get:
      operationId: v1_accounts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRead'
          description: ''
    put:
      operationId: v1_accounts_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountWrite'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountWrite'
          description: ''
    patch:
      operationId: v1_accounts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccountWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccountWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccountWrite'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountWrite'
          description: ''
    delete:
      operationId: v1_accounts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/accounts/otp/:
    get:
      operationId: v1_accounts_otp_retrieve
      tags:
      - v1
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTPVerifier'
          description: ''
    post:
      operationId: v1_accounts_otp_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTPVerifier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OTPVerifier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OTPVerifier'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTPVerifier'
          description: ''
  /v1/accounts/verify/:
    get:
      operationId: v1_accounts_verify_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - html
          - json
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountVerification'
            text/html:
              schema:
                $ref: '#/components/schemas/AccountVerification'
          description: ''
    post:
      operationId: v1_accounts_verify_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - html
          - json
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountVerification'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountVerification'
            text/html:
              schema:
                $ref: '#/components/schemas/AccountVerification'
          description: ''
  /v1/actions/:
    get:
      operationId: v1_actions_list
      description: |-
        list:
        Return a list of Action instances

        create:
        Create a new Action instance

        read:
        Return details about an Action instance
      parameters:
      - in: query
        name: cancelled
        schema:
          type: boolean
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: query
        name: device
        schema:
          type: string
      - in: query
        name: expired
        schema:
          type: boolean
        description: Expired
      - in: query
        name: expiry_date
        schema:
          type: string
          format: date-time
      - in: query
        name: finished
        schema:
          type: boolean
        description: Finished
      - in: query
        name: result_code
        schema:
          type: integer
          nullable: true
          enum:
          - 0
          - 1
      - in: query
        name: service_level
        schema:
          type: integer
          enum:
          - 0
          - 1
          - 2
      - in: query
        name: type
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionReadList'
          description: ''
    post:
      operationId: v1_actions_create
      description: |-
        list:
        Return a list of Action instances

        create:
        Create a new Action instance

        read:
        Return details about an Action instance
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActionWrite'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionWrite'
          description: ''
  /v1/actions/{id}/:
    get:
      operationId: v1_actions_retrieve
      description: |-
        list:
        Return a list of Action instances

        create:
        Create a new Action instance

        read:
        Return details about an Action instance
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionRead'
          description: ''
    patch:
      operationId: v1_actions_partial_update
      description: |-
        list:
        Return a list of Action instances

        create:
        Create a new Action instance

        read:
        Return details about an Action instance
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActionPatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActionPatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActionPatch'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPatch'
          description: ''
  /v1/actions/{id}/lifecycles/:
    get:
      operationId: v1_actions_lifecycles_list
      description: |-
        list:
        Return a list of Action Lifecycle instances

        read:
        Return details about an Action Lifecycle instance
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionLifecycleList'
          description: ''
  /v1/applications/:
    get:
      operationId: v1_applications_list
      description: |-
        list:
        Return a list of Application instances

        create:
        Create a new Application instance

        read:
        Return details about an application instance

        update:
        Update an existing Application instance

        partial_update:
        Update an existing Application instance

        delete:
        Delete an existing Application instance
      parameters:
      - in: query
        name: alias
        schema:
          type: string
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDefaultApplicationList'
          description: ''
    post:
      operationId: v1_applications_create
      description: |-
        list:
        Return a list of Application instances

        create:
        Create a new Application instance

        read:
        Return details about an application instance

        update:
        Update an existing Application instance

        partial_update:
        Update an existing Application instance

        delete:
        Delete an existing Application instance
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateApplication'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplication'
          description: ''
  /v1/applications/{id}/:
    get:
      operationId: v1_applications_retrieve
      description: |-
        list:
        Return a list of Application instances

        create:
        Create a new Application instance

        read:
        Return details about an application instance

        update:
        Update an existing Application instance

        partial_update:
        Update an existing Application instance

        delete:
        Delete an existing Application instance
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultApplication'
          description: ''
    put:
      operationId: v1_applications_update
      description: |-
        list:
        Return a list of Application instances

        create:
        Create a new Application instance

        read:
        Return details about an application instance

        update:
        Update an existing Application instance

        partial_update:
        Update an existing Application instance

        delete:
        Delete an existing Application instance
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateApplication'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplication'
          description: ''
    patch:
      operationId: v1_applications_partial_update
      description: |-
        list:
        Return a list of Application instances

        create:
        Create a new Application instance

        read:
        Return details about an application instance

        update:
        Update an existing Application instance

        partial_update:
        Update an existing Application instance

        delete:
        Delete an existing Application instance
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCreateApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCreateApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCreateApplication'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplication'
          description: ''
    delete:
      operationId: v1_applications_destroy
      description: |-
        list:
        Return a list of Application instances

        create:
        Create a new Application instance

        read:
        Return details about an application instance

        update:
        Update an existing Application instance

        partial_update:
        Update an existing Application instance

        delete:
        Delete an existing Application instance
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/authenticate/:
    post:
      operationId: v1_authenticate_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObtainTokenPairByKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObtainTokenPairByKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObtainTokenPairByKey'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObtainTokenPairByKey'
          description: ''
  /v1/authenticate/refresh/:
    post:
      operationId: v1_authenticate_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /v1/connectionprofiles/:
    get:
      operationId: v1_connectionprofiles_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConnectionProfileList'
          description: ''
  /v1/connectionprofiles/{id}/:
    get:
      operationId: v1_connectionprofiles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionProfile'
          description: ''
  /v1/deployments/:
    get:
      operationId: v1_deployments_list
      description: |-
        list:
        Return a list of Deployment instances

        create:
        Create a new Deployment instance

        read:
        Return details about a Deployment instance
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: query
        name: finished
        schema:
          type: boolean
        description: Finished
      - in: query
        name: firmware
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeploymentReadList'
          description: ''
    post:
      operationId: v1_deployments_create
      description: |-
        list:
        Return a list of Deployment instances

        create:
        Create a new Deployment instance

        read:
        Return details about a Deployment instance
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeploymentWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeploymentWrite'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentWrite'
          description: ''
  /v1/deployments/{id}/:
    get:
      operationId: v1_deployments_retrieve
      description: |-
        list:
        Return a list of Deployment instances

        create:
        Create a new Deployment instance

        read:
        Return details about a Deployment instance
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentRead'
          description: ''
  /v1/devices/:
    get:
      operationId: v1_devices_list
      description: |-
        list:
        Return a list of Device instances

        create:
        Create a new Device instance

        read:
        Return details about a Device instance

        update:
        Update an existing Device instance

        partial_update:
        Update an existing Device instance

        delete:
        Delete an existing Device instance
      parameters:
      - in: query
        name: activated
        schema:
          type: boolean
      - in: query
        name: application
        schema:
          type: string
          format: uuid
          nullable: true
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: query
        name: meta
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
          enum:
          - cellular
          - other
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReadDeviceList'
          description: ''
    post:
      operationId: v1_devices_create
      description: |-
        list:
        Return a list of Device instances

        create:
        Create a new Device instance

        read:
        Return details about a Device instance

        update:
        Update an existing Device instance

        partial_update:
        Update an existing Device instance

        delete:
        Delete an existing Device instance
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateDevice'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDevice'
          description: ''
  /v1/devices/{device}/events/:
    get:
      operationId: v1_devices_events_list
      description: |-
        list:
        Return a list of Event instances

        read:
        Return details about an Event instance
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: path
        name: device
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      - in: query
        name: type
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ''
  /v1/devices/{device}/files/:
    get:
      operationId: v1_devices_files_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: path
        name: device
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFileReadList'
          description: ''
  /v1/devices/{id}/:
    get:
      operationId: v1_devices_retrieve
      description: |-
        list:
        Return a list of Device instances

        create:
        Create a new Device instance

        read:
        Return details about a Device instance

        update:
        Update an existing Device instance

        partial_update:
        Update an existing Device instance

        delete:
        Delete an existing Device instance
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadDevice'
          description: ''
    put:
      operationId: v1_devices_update
      description: |-
        list:
        Return a list of Device instances

        create:
        Create a new Device instance

        read:
        Return details about a Device instance

        update:
        Update an existing Device instance

        partial_update:
        Update an existing Device instance

        delete:
        Delete an existing Device instance
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateDevice'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDevice'
          description: ''
    patch:
      operationId: v1_devices_partial_update
      description: |-
        list:
        Return a list of Device instances

        create:
        Create a new Device instance

        read:
        Return details about a Device instance

        update:
        Update an existing Device instance

        partial_update:
        Update an existing Device instance

        delete:
        Delete an existing Device instance
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateDevice'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDevice'
          description: ''
    delete:
      operationId: v1_devices_destroy
      description: |-
        list:
        Return a list of Device instances

        create:
        Create a new Device instance

        read:
        Return details about a Device instance

        update:
        Update an existing Device instance

        partial_update:
        Update an existing Device instance

        delete:
        Delete an existing Device instance
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/events/:
    get:
      operationId: v1_events_list
      description: |-
        list:
        Return a list of Event instances

        read:
        Return details about an Event instance
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ''
  /v1/events/{id}/:
    get:
      operationId: v1_events_retrieve
      description: |-
        list:
        Return a list of Event instances

        read:
        Return details about an Event instance
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /v1/files/:
    get:
      operationId: v1_files_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFileReadList'
          description: ''
    post:
      operationId: v1_files_create
      tags:
      - v1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileWrite'
          application/json:
            schema:
              $ref: '#/components/schemas/FileWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileWrite'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileWrite'
          description: ''
  /v1/files/{key}/:
    get:
      operationId: v1_files_retrieve
      parameters:
      - in: path
        name: key
        schema:
          type: string
        description: A unique value identifying this file.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileRead'
          description: ''
    put:
      operationId: v1_files_update
      parameters:
      - in: path
        name: key
        schema:
          type: string
        description: A unique value identifying this file.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUpdate'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUpdate'
          description: ''
    patch:
      operationId: v1_files_partial_update
      parameters:
      - in: path
        name: key
        schema:
          type: string
        description: A unique value identifying this file.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFileUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFileUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUpdate'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUpdate'
          description: ''
    delete:
      operationId: v1_files_destroy
      parameters:
      - in: path
        name: key
        schema:
          type: string
        description: A unique value identifying this file.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/files/{key}/content/:
    get:
      operationId: v1_files_content_retrieve
      parameters:
      - in: path
        name: key
        schema:
          type: string
        description: A unique value identifying this file.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileRead'
          description: ''
  /v1/firmwares/:
    get:
      operationId: v1_firmwares_list
      description: |-
        list:
        Return a list of Firmwares instances

        create:
        Create a new Firmware instance

        read:
        Return details about a Firmware instance

        update:
        Update an existing Firmware instance

        partial_update:
        Update an existing Firmware instance

        delete:
        Delete an existing Firmware instance
      parameters:
      - in: query
        name: alias
        schema:
          type: string
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: query
        name: dest
        schema:
          type: integer
          enum:
          - 0
          - 1
      - in: query
        name: version
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFirmwareReadList'
          description: ''
  /v1/firmwares/{id}/:
    get:
      operationId: v1_firmwares_retrieve
      description: |-
        list:
        Return a list of Firmwares instances

        create:
        Create a new Firmware instance

        read:
        Return details about a Firmware instance

        update:
        Update an existing Firmware instance

        partial_update:
        Update an existing Firmware instance

        delete:
        Delete an existing Firmware instance
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareRead'
          description: ''
    delete:
      operationId: v1_firmwares_destroy
      description: |-
        list:
        Return a list of Firmwares instances

        create:
        Create a new Firmware instance

        read:
        Return details about a Firmware instance

        update:
        Update an existing Firmware instance

        partial_update:
        Update an existing Firmware instance

        delete:
        Delete an existing Firmware instance
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/organisations/:
    get:
      operationId: v1_organisations_list
      description: |-
        list:
        Return a list of Organisations that your user is attached to

        read:
        Return details about an Organisation instance

        update:
        Update an existing Organisation instance

        partial_update:
        Update an existing Organisation instance
      parameters:
      - in: query
        name: city
        schema:
          type: string
      - in: query
        name: country
        schema:
          type: string
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: query
        name: line1
        schema:
          type: string
      - in: query
        name: line2
        schema:
          type: string
      - in: query
        name: max_token_lifespan_in_seconds
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: postal_code
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisationList'
          description: ''
  /v1/organisations/{id}:
    get:
      operationId: v1_organisations_retrieve
      description: docstring for OrganisationViewSet.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: ''
    put:
      operationId: v1_organisations_update
      description: docstring for OrganisationViewSet.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganisation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateOrganisation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateOrganisation'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrganisation'
          description: ''
    patch:
      operationId: v1_organisations_partial_update
      description: docstring for OrganisationViewSet.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrganisation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrganisation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrganisation'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrganisation'
          description: ''
  /v1/sims/:
    get:
      operationId: v1_sims_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSIMList'
          description: ''
  /v1/sims/{iccid}/:
    get:
      operationId: v1_sims_retrieve
      parameters:
      - in: path
        name: iccid
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SIM'
          description: ''
    put:
      operationId: v1_sims_update
      parameters:
      - in: path
        name: iccid
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SIMWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SIMWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SIMWrite'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SIMWrite'
          description: ''
    patch:
      operationId: v1_sims_partial_update
      parameters:
      - in: path
        name: iccid
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSIMWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSIMWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSIMWrite'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SIMWrite'
          description: ''
  /v1/tokens/:
    get:
      operationId: v1_tokens_list
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: query
        name: activated
        schema:
          type: boolean
      - in: query
        name: alias
        schema:
          type: string
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: query
        name: expiry_date
        schema:
          type: string
          format: date-time
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDefaultTokenList'
          description: ''
    post:
      operationId: v1_tokens_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateToken'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateToken'
          description: ''
  /v1/tokens/{id}/:
    get:
      operationId: v1_tokens_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultToken'
          description: ''
    delete:
      operationId: v1_tokens_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/updates/:
    get:
      operationId: v1_updates_list
      parameters:
      - in: query
        name: changed_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: query
        name: deployment
        schema:
          type: integer
      - in: query
        name: device
        schema:
          type: string
      - in: query
        name: finished
        schema:
          type: boolean
        description: Finished
      - in: query
        name: result_code
        schema:
          type: integer
          nullable: true
          enum:
          - 0
          - 1
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUpdateReadList'
          description: ''
  /v1/updates/{id}/:
    get:
      operationId: v1_updates_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9A-Za-z-_]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRead'
          description: ''
  /accounts/forgotpassword/:
    get:
      operationId: accounts_forgotpassword_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - html
          - json
      tags:
      - accounts
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
            text/html:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
    post:
      operationId: accounts_forgotpassword_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - html
          - json
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
            text/html:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
  /accounts/login/:
    get:
      operationId: accounts_login_retrieve
      tags:
      - accounts
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: accounts_login_create
      tags:
      - accounts
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /accounts/otp/:
    get:
      operationId: accounts_otp_retrieve
      tags:
      - accounts
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTPVerifier'
          description: ''
    post:
      operationId: accounts_otp_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTPVerifier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OTPVerifier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OTPVerifier'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTPVerifier'
          description: ''
  /accounts/otp_verifier/:
    get:
      operationId: accounts_otp_verifier_retrieve
      tags:
      - accounts
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: accounts_otp_verifier_create
      tags:
      - accounts
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /accounts/verify/:
    get:
      operationId: accounts_verify_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - html
          - json
      tags:
      - accounts
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountVerification'
            text/html:
              schema:
                $ref: '#/components/schemas/AccountVerification'
          description: ''
    post:
      operationId: accounts_verify_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - html
          - json
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountVerification'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountVerification'
            text/html:
              schema:
                $ref: '#/components/schemas/AccountVerification'
          description: ''
  /api-auth/login/:
    get:
      operationId: api_auth_login_retrieve
      tags:
      - api-auth
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_auth_login_create
      tags:
      - api-auth
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api-auth/otp_verifier/:
    get:
      operationId: api_auth_otp_verifier_retrieve
      tags:
      - api-auth
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_auth_otp_verifier_create
      tags:
      - api-auth
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /payments/stripe-webhooks/:
    post:
      operationId: payments_stripe_webhooks_create
      tags:
      - payments
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /private/:
    get:
      operationId: private_retrieve
      description: |-
        list:
        Return a list of endpoints
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /private/connection/sim/:
    get:
      operationId: private_connection_sim_list
      description: |-
        ### The APIs include:


        > `GET`  connection/sim ===> list all `sims` page by page;

        > `POST`  connection/sim ===> create a new `sim`

        > `GET` connection/sim/123 ===> return the details of the `sim` 123

        > `PATCH` connection/sim/123 and `PUT` connection/sim/123 ==> update the `sim` 123

        > `DELETE` connection/sim/123 ===> delete the `sim` 123

        > `OPTIONS` connection/sim ===> show the supported verbs regarding endpoint `connection/sim`

        > `OPTIONS` connection/sim/123 ===> show the supported verbs regarding endpoint `connection/sim/123`
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSIMWriteList'
          description: ''
    post:
      operationId: private_connection_sim_create
      description: |-
        ### The APIs include:


        > `GET`  connection/sim ===> list all `sims` page by page;

        > `POST`  connection/sim ===> create a new `sim`

        > `GET` connection/sim/123 ===> return the details of the `sim` 123

        > `PATCH` connection/sim/123 and `PUT` connection/sim/123 ==> update the `sim` 123

        > `DELETE` connection/sim/123 ===> delete the `sim` 123

        > `OPTIONS` connection/sim ===> show the supported verbs regarding endpoint `connection/sim`

        > `OPTIONS` connection/sim/123 ===> show the supported verbs regarding endpoint `connection/sim/123`
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SIMWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SIMWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SIMWrite'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SIMWrite'
          description: ''
  /private/connection/sim/{iccid}/:
    get:
      operationId: private_connection_sim_retrieve
      description: |-
        ### The APIs include:


        > `GET`  connection/sim ===> list all `sims` page by page;

        > `POST`  connection/sim ===> create a new `sim`

        > `GET` connection/sim/123 ===> return the details of the `sim` 123

        > `PATCH` connection/sim/123 and `PUT` connection/sim/123 ==> update the `sim` 123

        > `DELETE` connection/sim/123 ===> delete the `sim` 123

        > `OPTIONS` connection/sim ===> show the supported verbs regarding endpoint `connection/sim`

        > `OPTIONS` connection/sim/123 ===> show the supported verbs regarding endpoint `connection/sim/123`
      parameters:
      - in: path
        name: iccid
        schema:
          type: string
        description: A unique value identifying this sim.
        required: true
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SIMWrite'
          description: ''
    patch:
      operationId: private_connection_sim_partial_update
      description: |-
        ### The APIs include:


        > `GET`  connection/sim ===> list all `sims` page by page;

        > `POST`  connection/sim ===> create a new `sim`

        > `GET` connection/sim/123 ===> return the details of the `sim` 123

        > `PATCH` connection/sim/123 and `PUT` connection/sim/123 ==> update the `sim` 123

        > `DELETE` connection/sim/123 ===> delete the `sim` 123

        > `OPTIONS` connection/sim ===> show the supported verbs regarding endpoint `connection/sim`

        > `OPTIONS` connection/sim/123 ===> show the supported verbs regarding endpoint `connection/sim/123`
      parameters:
      - in: path
        name: iccid
        schema:
          type: string
        description: A unique value identifying this sim.
        required: true
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSIMWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSIMWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSIMWrite'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SIMWrite'
          description: ''
    delete:
      operationId: private_connection_sim_destroy
      description: |-
        ### The APIs include:


        > `GET`  connection/sim ===> list all `sims` page by page;

        > `POST`  connection/sim ===> create a new `sim`

        > `GET` connection/sim/123 ===> return the details of the `sim` 123

        > `PATCH` connection/sim/123 and `PUT` connection/sim/123 ==> update the `sim` 123

        > `DELETE` connection/sim/123 ===> delete the `sim` 123

        > `OPTIONS` connection/sim ===> show the supported verbs regarding endpoint `connection/sim`

        > `OPTIONS` connection/sim/123 ===> show the supported verbs regarding endpoint `connection/sim/123`
      parameters:
      - in: path
        name: iccid
        schema:
          type: string
        description: A unique value identifying this sim.
        required: true
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /private/device/action/:
    get:
      operationId: private_device_action_list
      description: |-
        ### The APIs include:


        > `GET`  device/action ===> list all `actions` page by page;

        > `POST`  device/action ===> create a new `action`

        > `GET` device/action/123 ===> return the details of the `action` 123

        > `PATCH` device/action/123 and `PUT` device/action/123 ==> update the `action` 123

        > `DELETE` device/action/123 ===> delete the `action` 123

        > `OPTIONS` device/action ===> show the supported verbs regarding endpoint `device/action`

        > `OPTIONS` device/action/123 ===> show the supported verbs regarding endpoint `device/action/123`
      parameters:
      - in: query
        name: cancelled
        schema:
          type: boolean
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: query
        name: device
        schema:
          type: string
      - in: query
        name: expired
        schema:
          type: boolean
        description: Expired
      - in: query
        name: expiry_date
        schema:
          type: string
          format: date-time
      - in: query
        name: finished
        schema:
          type: boolean
        description: Finished
      - in: query
        name: result_code
        schema:
          type: integer
          nullable: true
          enum:
          - 0
          - 1
      - in: query
        name: service_level
        schema:
          type: integer
          enum:
          - 0
          - 1
          - 2
      - in: query
        name: type
        schema:
          type: string
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionReadList'
          description: ''
    post:
      operationId: private_device_action_create
      description: |-
        ### The APIs include:


        > `GET`  device/action ===> list all `actions` page by page;

        > `POST`  device/action ===> create a new `action`

        > `GET` device/action/123 ===> return the details of the `action` 123

        > `PATCH` device/action/123 and `PUT` device/action/123 ==> update the `action` 123

        > `DELETE` device/action/123 ===> delete the `action` 123

        > `OPTIONS` device/action ===> show the supported verbs regarding endpoint `device/action`

        > `OPTIONS` device/action/123 ===> show the supported verbs regarding endpoint `device/action/123`
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActionWrite'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionWrite'
          description: ''
  /private/device/action/{id}/:
    get:
      operationId: private_device_action_retrieve
      description: |-
        ### The APIs include:


        > `GET`  device/action ===> list all `actions` page by page;

        > `POST`  device/action ===> create a new `action`

        > `GET` device/action/123 ===> return the details of the `action` 123

        > `PATCH` device/action/123 and `PUT` device/action/123 ==> update the `action` 123

        > `DELETE` device/action/123 ===> delete the `action` 123

        > `OPTIONS` device/action ===> show the supported verbs regarding endpoint `device/action`

        > `OPTIONS` device/action/123 ===> show the supported verbs regarding endpoint `device/action/123`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this action.
        required: true
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionRead'
          description: ''
    put:
      operationId: private_device_action_update
      description: |-
        ### The APIs include:


        > `GET`  device/action ===> list all `actions` page by page;

        > `POST`  device/action ===> create a new `action`

        > `GET` device/action/123 ===> return the details of the `action` 123

        > `PATCH` device/action/123 and `PUT` device/action/123 ==> update the `action` 123

        > `DELETE` device/action/123 ===> delete the `action` 123

        > `OPTIONS` device/action ===> show the supported verbs regarding endpoint `device/action`

        > `OPTIONS` device/action/123 ===> show the supported verbs regarding endpoint `device/action/123`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this action.
        required: true
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionPatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionPatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActionPatch'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPatch'
          description: ''
    patch:
      operationId: private_device_action_partial_update
      description: |-
        ### The APIs include:


        > `GET`  device/action ===> list all `actions` page by page;

        > `POST`  device/action ===> create a new `action`

        > `GET` device/action/123 ===> return the details of the `action` 123

        > `PATCH` device/action/123 and `PUT` device/action/123 ==> update the `action` 123

        > `DELETE` device/action/123 ===> delete the `action` 123

        > `OPTIONS` device/action ===> show the supported verbs regarding endpoint `device/action`

        > `OPTIONS` device/action/123 ===> show the supported verbs regarding endpoint `device/action/123`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this action.
        required: true
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActionPatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActionPatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActionPatch'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPatch'
          description: ''
    delete:
      operationId: private_device_action_destroy
      description: |-
        ### The APIs include:


        > `GET`  device/action ===> list all `actions` page by page;

        > `POST`  device/action ===> create a new `action`

        > `GET` device/action/123 ===> return the details of the `action` 123

        > `PATCH` device/action/123 and `PUT` device/action/123 ==> update the `action` 123

        > `DELETE` device/action/123 ===> delete the `action` 123

        > `OPTIONS` device/action ===> show the supported verbs regarding endpoint `device/action`

        > `OPTIONS` device/action/123 ===> show the supported verbs regarding endpoint `device/action/123`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this action.
        required: true
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /private/device/device/:
    get:
      operationId: private_device_device_list
      description: |-
        ### The APIs include:


        > `GET`  device/device ===> list all `devices` page by page;

        > `POST`  device/device ===> create a new `device`

        > `GET` device/device/123 ===> return the details of the `device` 123

        > `PATCH` device/device/123 and `PUT` device/device/123 ==> update the `device` 123

        > `DELETE` device/device/123 ===> delete the `device` 123

        > `OPTIONS` device/device ===> show the supported verbs regarding endpoint `device/device`

        > `OPTIONS` device/device/123 ===> show the supported verbs regarding endpoint `device/device/123`
      parameters:
      - in: query
        name: activated
        schema:
          type: boolean
      - in: query
        name: application
        schema:
          type: string
          format: uuid
          nullable: true
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: query
        name: meta
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
          enum:
          - cellular
          - other
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDefaultDeviceList'
          description: ''
    post:
      operationId: private_device_device_create
      description: |-
        ### The APIs include:


        > `GET`  device/device ===> list all `devices` page by page;

        > `POST`  device/device ===> create a new `device`

        > `GET` device/device/123 ===> return the details of the `device` 123

        > `PATCH` device/device/123 and `PUT` device/device/123 ==> update the `device` 123

        > `DELETE` device/device/123 ===> delete the `device` 123

        > `OPTIONS` device/device ===> show the supported verbs regarding endpoint `device/device`

        > `OPTIONS` device/device/123 ===> show the supported verbs regarding endpoint `device/device/123`
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateDevice'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDevice'
          description: ''
  /private/device/device/{id}/:
    get:
      operationId: private_device_device_retrieve
      description: |-
        ### The APIs include:


        > `GET`  device/device ===> list all `devices` page by page;

        > `POST`  device/device ===> create a new `device`

        > `GET` device/device/123 ===> return the details of the `device` 123

        > `PATCH` device/device/123 and `PUT` device/device/123 ==> update the `device` 123

        > `DELETE` device/device/123 ===> delete the `device` 123

        > `OPTIONS` device/device ===> show the supported verbs regarding endpoint `device/device`

        > `OPTIONS` device/device/123 ===> show the supported verbs regarding endpoint `device/device/123`
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this device.
        required: true
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultDevice'
          description: ''
    put:
      operationId: private_device_device_update
      description: |-
        ### The APIs include:


        > `GET`  device/device ===> list all `devices` page by page;

        > `POST`  device/device ===> create a new `device`

        > `GET` device/device/123 ===> return the details of the `device` 123

        > `PATCH` device/device/123 and `PUT` device/device/123 ==> update the `device` 123

        > `DELETE` device/device/123 ===> delete the `device` 123

        > `OPTIONS` device/device ===> show the supported verbs regarding endpoint `device/device`

        > `OPTIONS` device/device/123 ===> show the supported verbs regarding endpoint `device/device/123`
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this device.
        required: true
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateDevice'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDevice'
          description: ''
    patch:
      operationId: private_device_device_partial_update
      description: |-
        ### The APIs include:


        > `GET`  device/device ===> list all `devices` page by page;

        > `POST`  device/device ===> create a new `device`

        > `GET` device/device/123 ===> return the details of the `device` 123

        > `PATCH` device/device/123 and `PUT` device/device/123 ==> update the `device` 123

        > `DELETE` device/device/123 ===> delete the `device` 123

        > `OPTIONS` device/device ===> show the supported verbs regarding endpoint `device/device`

        > `OPTIONS` device/device/123 ===> show the supported verbs regarding endpoint `device/device/123`
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this device.
        required: true
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateDevice'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDevice'
          description: ''
    delete:
      operationId: private_device_device_destroy
      description: |-
        ### The APIs include:


        > `GET`  device/device ===> list all `devices` page by page;

        > `POST`  device/device ===> create a new `device`

        > `GET` device/device/123 ===> return the details of the `device` 123

        > `PATCH` device/device/123 and `PUT` device/device/123 ==> update the `device` 123

        > `DELETE` device/device/123 ===> delete the `device` 123

        > `OPTIONS` device/device ===> show the supported verbs regarding endpoint `device/device`

        > `OPTIONS` device/device/123 ===> show the supported verbs regarding endpoint `device/device/123`
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this device.
        required: true
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /private/device/deviceconfiguration/:
    get:
      operationId: private_device_deviceconfiguration_list
      description: |-
        ### The APIs include:


        > `GET`  device/deviceconfiguration ===> list all `device configurations` page by page;

        > `POST`  device/deviceconfiguration ===> create a new `device configuration`

        > `GET` device/deviceconfiguration/123 ===> return the details of the `device configuration` 123

        > `PATCH` device/deviceconfiguration/123 and `PUT` device/deviceconfiguration/123 ==> update the `device configuration` 123

        > `DELETE` device/deviceconfiguration/123 ===> delete the `device configuration` 123

        > `OPTIONS` device/deviceconfiguration ===> show the supported verbs regarding endpoint `device/deviceconfiguration`

        > `OPTIONS` device/deviceconfiguration/123 ===> show the supported verbs regarding endpoint `device/deviceconfiguration/123`
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceConfigurationModelList'
          description: ''
    post:
      operationId: private_device_deviceconfiguration_create
      description: |-
        ### The APIs include:


        > `GET`  device/deviceconfiguration ===> list all `device configurations` page by page;

        > `POST`  device/deviceconfiguration ===> create a new `device configuration`

        > `GET` device/deviceconfiguration/123 ===> return the details of the `device configuration` 123

        > `PATCH` device/deviceconfiguration/123 and `PUT` device/deviceconfiguration/123 ==> update the `device configuration` 123

        > `DELETE` device/deviceconfiguration/123 ===> delete the `device configuration` 123

        > `OPTIONS` device/deviceconfiguration ===> show the supported verbs regarding endpoint `device/deviceconfiguration`

        > `OPTIONS` device/deviceconfiguration/123 ===> show the supported verbs regarding endpoint `device/deviceconfiguration/123`
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceConfigurationModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceConfigurationModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceConfigurationModel'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceConfigurationModel'
          description: ''
  /private/device/deviceconfiguration/{id}/:
    get:
      operationId: private_device_deviceconfiguration_retrieve
      description: |-
        ### The APIs include:


        > `GET`  device/deviceconfiguration ===> list all `device configurations` page by page;

        > `POST`  device/deviceconfiguration ===> create a new `device configuration`

        > `GET` device/deviceconfiguration/123 ===> return the details of the `device configuration` 123

        > `PATCH` device/deviceconfiguration/123 and `PUT` device/deviceconfiguration/123 ==> update the `device configuration` 123

        > `DELETE` device/deviceconfiguration/123 ===> delete the `device configuration` 123

        > `OPTIONS` device/deviceconfiguration ===> show the supported verbs regarding endpoint `device/deviceconfiguration`

        > `OPTIONS` device/deviceconfiguration/123 ===> show the supported verbs regarding endpoint `device/deviceconfiguration/123`
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this device configuration.
        required: true
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceConfigurationModel'
          description: ''
    put:
      operationId: private_device_deviceconfiguration_update
      description: |-
        ### The APIs include:


        > `GET`  device/deviceconfiguration ===> list all `device configurations` page by page;

        > `POST`  device/deviceconfiguration ===> create a new `device configuration`

        > `GET` device/deviceconfiguration/123 ===> return the details of the `device configuration` 123

        > `PATCH` device/deviceconfiguration/123 and `PUT` device/deviceconfiguration/123 ==> update the `device configuration` 123

        > `DELETE` device/deviceconfiguration/123 ===> delete the `device configuration` 123

        > `OPTIONS` device/deviceconfiguration ===> show the supported verbs regarding endpoint `device/deviceconfiguration`

        > `OPTIONS` device/deviceconfiguration/123 ===> show the supported verbs regarding endpoint `device/deviceconfiguration/123`
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this device configuration.
        required: true
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceConfigurationModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceConfigurationModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceConfigurationModel'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceConfigurationModel'
          description: ''
    patch:
      operationId: private_device_deviceconfiguration_partial_update
      description: |-
        ### The APIs include:


        > `GET`  device/deviceconfiguration ===> list all `device configurations` page by page;

        > `POST`  device/deviceconfiguration ===> create a new `device configuration`

        > `GET` device/deviceconfiguration/123 ===> return the details of the `device configuration` 123

        > `PATCH` device/deviceconfiguration/123 and `PUT` device/deviceconfiguration/123 ==> update the `device configuration` 123

        > `DELETE` device/deviceconfiguration/123 ===> delete the `device configuration` 123

        > `OPTIONS` device/deviceconfiguration ===> show the supported verbs regarding endpoint `device/deviceconfiguration`

        > `OPTIONS` device/deviceconfiguration/123 ===> show the supported verbs regarding endpoint `device/deviceconfiguration/123`
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this device configuration.
        required: true
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeviceConfigurationModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeviceConfigurationModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeviceConfigurationModel'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceConfigurationModel'
          description: ''
    delete:
      operationId: private_device_deviceconfiguration_destroy
      description: |-
        ### The APIs include:


        > `GET`  device/deviceconfiguration ===> list all `device configurations` page by page;

        > `POST`  device/deviceconfiguration ===> create a new `device configuration`

        > `GET` device/deviceconfiguration/123 ===> return the details of the `device configuration` 123

        > `PATCH` device/deviceconfiguration/123 and `PUT` device/deviceconfiguration/123 ==> update the `device configuration` 123

        > `DELETE` device/deviceconfiguration/123 ===> delete the `device configuration` 123

        > `OPTIONS` device/deviceconfiguration ===> show the supported verbs regarding endpoint `device/deviceconfiguration`

        > `OPTIONS` device/deviceconfiguration/123 ===> show the supported verbs regarding endpoint `device/deviceconfiguration/123`
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this device configuration.
        required: true
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /private/firmware/binary/:
    get:
      operationId: private_firmware_binary_list
      description: |-
        ### The APIs include:


        > `GET`  firmware/binary ===> list all `binarys` page by page;

        > `POST`  firmware/binary ===> create a new `binary`

        > `GET` firmware/binary/123 ===> return the details of the `binary` 123

        > `PATCH` firmware/binary/123 and `PUT` firmware/binary/123 ==> update the `binary` 123

        > `DELETE` firmware/binary/123 ===> delete the `binary` 123

        > `OPTIONS` firmware/binary ===> show the supported verbs regarding endpoint `firmware/binary`

        > `OPTIONS` firmware/binary/123 ===> show the supported verbs regarding endpoint `firmware/binary/123`
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBinaryList'
          description: ''
    post:
      operationId: private_firmware_binary_create
      description: |-
        ### The APIs include:


        > `GET`  firmware/binary ===> list all `binarys` page by page;

        > `POST`  firmware/binary ===> create a new `binary`

        > `GET` firmware/binary/123 ===> return the details of the `binary` 123

        > `PATCH` firmware/binary/123 and `PUT` firmware/binary/123 ==> update the `binary` 123

        > `DELETE` firmware/binary/123 ===> delete the `binary` 123

        > `OPTIONS` firmware/binary ===> show the supported verbs regarding endpoint `firmware/binary`

        > `OPTIONS` firmware/binary/123 ===> show the supported verbs regarding endpoint `firmware/binary/123`
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Binary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Binary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Binary'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Binary'
          description: ''
  /private/firmware/binary/{id}/:
    get:
      operationId: private_firmware_binary_retrieve
      description: |-
        ### The APIs include:


        > `GET`  firmware/binary ===> list all `binarys` page by page;

        > `POST`  firmware/binary ===> create a new `binary`

        > `GET` firmware/binary/123 ===> return the details of the `binary` 123

        > `PATCH` firmware/binary/123 and `PUT` firmware/binary/123 ==> update the `binary` 123

        > `DELETE` firmware/binary/123 ===> delete the `binary` 123

        > `OPTIONS` firmware/binary ===> show the supported verbs regarding endpoint `firmware/binary`

        > `OPTIONS` firmware/binary/123 ===> show the supported verbs regarding endpoint `firmware/binary/123`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this binary.
        required: true
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Binary'
          description: ''
    delete:
      operationId: private_firmware_binary_destroy
      description: |-
        ### The APIs include:


        > `GET`  firmware/binary ===> list all `binarys` page by page;

        > `POST`  firmware/binary ===> create a new `binary`

        > `GET` firmware/binary/123 ===> return the details of the `binary` 123

        > `PATCH` firmware/binary/123 and `PUT` firmware/binary/123 ==> update the `binary` 123

        > `DELETE` firmware/binary/123 ===> delete the `binary` 123

        > `OPTIONS` firmware/binary ===> show the supported verbs regarding endpoint `firmware/binary`

        > `OPTIONS` firmware/binary/123 ===> show the supported verbs regarding endpoint `firmware/binary/123`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this binary.
        required: true
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /private/firmware/firmware/:
    get:
      operationId: private_firmware_firmware_list
      description: |-
        ### The APIs include:


        > `GET`  firmware/firmware ===> list all `firmwares` page by page;

        > `POST`  firmware/firmware ===> create a new `firmware`

        > `GET` firmware/firmware/123 ===> return the details of the `firmware` 123

        > `PATCH` firmware/firmware/123 and `PUT` firmware/firmware/123 ==> update the `firmware` 123

        > `DELETE` firmware/firmware/123 ===> delete the `firmware` 123

        > `OPTIONS` firmware/firmware ===> show the supported verbs regarding endpoint `firmware/firmware`

        > `OPTIONS` firmware/firmware/123 ===> show the supported verbs regarding endpoint `firmware/firmware/123`
      parameters:
      - in: query
        name: alias
        schema:
          type: string
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: integer
      - in: query
        name: dest
        schema:
          type: integer
          enum:
          - 0
          - 1
      - in: query
        name: version
        schema:
          type: string
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFirmwareList'
          description: ''
    post:
      operationId: private_firmware_firmware_create
      description: |-
        ### The APIs include:


        > `GET`  firmware/firmware ===> list all `firmwares` page by page;

        > `POST`  firmware/firmware ===> create a new `firmware`

        > `GET` firmware/firmware/123 ===> return the details of the `firmware` 123

        > `PATCH` firmware/firmware/123 and `PUT` firmware/firmware/123 ==> update the `firmware` 123

        > `DELETE` firmware/firmware/123 ===> delete the `firmware` 123

        > `OPTIONS` firmware/firmware ===> show the supported verbs regarding endpoint `firmware/firmware`

        > `OPTIONS` firmware/firmware/123 ===> show the supported verbs regarding endpoint `firmware/firmware/123`
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Firmware'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Firmware'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Firmware'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Firmware'
          description: ''
  /private/firmware/firmware/{id}/:
    get:
      operationId: private_firmware_firmware_retrieve
      description: |-
        ### The APIs include:


        > `GET`  firmware/firmware ===> list all `firmwares` page by page;

        > `POST`  firmware/firmware ===> create a new `firmware`

        > `GET` firmware/firmware/123 ===> return the details of the `firmware` 123

        > `PATCH` firmware/firmware/123 and `PUT` firmware/firmware/123 ==> update the `firmware` 123

        > `DELETE` firmware/firmware/123 ===> delete the `firmware` 123

        > `OPTIONS` firmware/firmware ===> show the supported verbs regarding endpoint `firmware/firmware`

        > `OPTIONS` firmware/firmware/123 ===> show the supported verbs regarding endpoint `firmware/firmware/123`
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this firmware.
        required: true
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Firmware'
          description: ''
    put:
      operationId: private_firmware_firmware_update
      description: |-
        ### The APIs include:


        > `GET`  firmware/firmware ===> list all `firmwares` page by page;

        > `POST`  firmware/firmware ===> create a new `firmware`

        > `GET` firmware/firmware/123 ===> return the details of the `firmware` 123

        > `PATCH` firmware/firmware/123 and `PUT` firmware/firmware/123 ==> update the `firmware` 123

        > `DELETE` firmware/firmware/123 ===> delete the `firmware` 123

        > `OPTIONS` firmware/firmware ===> show the supported verbs regarding endpoint `firmware/firmware`

        > `OPTIONS` firmware/firmware/123 ===> show the supported verbs regarding endpoint `firmware/firmware/123`
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this firmware.
        required: true
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Firmware'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Firmware'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Firmware'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Firmware'
          description: ''
    patch:
      operationId: private_firmware_firmware_partial_update
      description: |-
        ### The APIs include:


        > `GET`  firmware/firmware ===> list all `firmwares` page by page;

        > `POST`  firmware/firmware ===> create a new `firmware`

        > `GET` firmware/firmware/123 ===> return the details of the `firmware` 123

        > `PATCH` firmware/firmware/123 and `PUT` firmware/firmware/123 ==> update the `firmware` 123

        > `DELETE` firmware/firmware/123 ===> delete the `firmware` 123

        > `OPTIONS` firmware/firmware ===> show the supported verbs regarding endpoint `firmware/firmware`

        > `OPTIONS` firmware/firmware/123 ===> show the supported verbs regarding endpoint `firmware/firmware/123`
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this firmware.
        required: true
      tags:
      - private
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFirmware'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFirmware'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFirmware'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Firmware'
          description: ''
    delete:
      operationId: private_firmware_firmware_destroy
      description: |-
        ### The APIs include:


        > `GET`  firmware/firmware ===> list all `firmwares` page by page;

        > `POST`  firmware/firmware ===> create a new `firmware`

        > `GET` firmware/firmware/123 ===> return the details of the `firmware` 123

        > `PATCH` firmware/firmware/123 and `PUT` firmware/firmware/123 ==> update the `firmware` 123

        > `DELETE` firmware/firmware/123 ===> delete the `firmware` 123

        > `OPTIONS` firmware/firmware ===> show the supported verbs regarding endpoint `firmware/firmware`

        > `OPTIONS` firmware/firmware/123 ===> show the supported verbs regarding endpoint `firmware/firmware/123`
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this firmware.
        required: true
      tags:
      - private
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AccountRead:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/RoleEnum'
        organisation_account:
          type: string
          readOnly: true
        verified:
          type: boolean
          readOnly: true
        otp_enabled:
          type: boolean
          default: false
        activated:
          type: boolean
        otp_verified:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - activated
      - created_at
      - id
      - organisation_account
      - otp_verified
      - url
      - username
      - verified
    AccountVerification:
      type: object
      properties:
        password:
          type: string
        confirm_password:
          type: string
        username:
          type: string
          readOnly: true
        first_name:
          type: string
          maxLength: 256
        last_name:
          type: string
          maxLength: 256
      required:
      - confirm_password
      - first_name
      - last_name
      - password
      - username
    AccountWrite:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/RoleEnum'
        otp_enabled:
          type: boolean
        otp_verified:
          type: string
          readOnly: true
        activated:
          type: boolean
        organisation_account:
          type: string
          readOnly: true
      required:
      - email
      - organisation_account
      - otp_verified
      - username
    ActionLifecycle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        lifecycle_type:
          $ref: '#/components/schemas/LifecycleTypeEnum'
        occured_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
      required:
      - id
      - lifecycle_type
      - occured_at
    ActionPatch:
      type: object
      properties:
        cancelled:
          type: boolean
    ActionRead:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        device:
          $ref: '#/components/schemas/SmallDevice'
        type:
          type: string
          maxLength: 64
        payload:
          type: object
          additionalProperties: {}
          nullable: true
        status:
          type: string
          readOnly: true
        webhooks:
          type: object
          additionalProperties: {}
          nullable: true
        service_level:
          type: integer
          default: 0
        cancelled:
          type: boolean
        finished:
          type: string
          readOnly: true
        result:
          type: object
          additionalProperties: {}
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        result_code:
          type: string
        expiry_date:
          type: string
          format: date-time
          nullable: true
        expired:
          type: string
          readOnly: true
      required:
      - created_at
      - device
      - expired
      - finished
      - id
      - result
      - result_code
      - status
      - type
      - url
    ActionWrite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        device:
          type: string
        type:
          type: string
          maxLength: 64
        payload:
          type: object
          additionalProperties: {}
          nullable: true
        webhooks:
          type: object
          additionalProperties: {}
          nullable: true
        service_level:
          type: integer
          default: 0
        cancelled:
          type: boolean
          readOnly: true
        finished:
          type: string
          readOnly: true
        result_code:
          allOf:
          - $ref: '#/components/schemas/ResultCodeEnum'
          readOnly: true
        result:
          type: object
          additionalProperties: {}
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        expiry_date:
          type: string
          format: date-time
          nullable: true
      required:
      - cancelled
      - created_at
      - device
      - finished
      - id
      - result
      - result_code
      - type
    Binary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        firmware:
          type: string
        address:
          type: string
          maxLength: 64
        bin_file:
          type: string
        crc_file:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - bin_file
      - created_at
      - firmware
      - id
    ConnectionProfile:
      type: object
      properties:
        id:
          type: string
          maxLength: 22
        networks:
          type: array
          items:
            $ref: '#/components/schemas/Network'
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        endpoint:
          type: string
          maxLength: 2000
        vendor:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - endpoint
      - networks
      - url
    CreateApplication:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        alias:
          type: string
          maxLength: 64
        description:
          type: string
          nullable: true
          maxLength: 64
        secret:
          type: string
          maxLength: 64
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - alias
      - created_at
      - id
      - secret
      - url
    CreateDevice:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 64
        password:
          type: string
          readOnly: true
        activated:
          type: boolean
        application:
          type: string
          format: uuid
          nullable: true
        webhooks:
          type: object
          additionalProperties: {}
          nullable: true
        meta:
          type: object
          additionalProperties: {}
          nullable: true
        sims:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - password
      - url
    CreateToken:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        alias:
          type: string
          maxLength: 64
        expiry_date:
          type: string
          format: date-time
          nullable: true
        token:
          type: string
          readOnly: true
        application:
          type: string
          nullable: true
        organisation:
          type: string
          nullable: true
        scope:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - alias
      - created_at
      - id
      - scope
      - token
      - url
    DefaultApplication:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: string
          format: uuid
        alias:
          type: string
          maxLength: 64
        description:
          type: string
          nullable: true
          maxLength: 64
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - alias
      - created_at
      - url
    DefaultDevice:
      type: object
      properties:
        id:
          type: string
          maxLength: 22
        application:
          $ref: '#/components/schemas/InnerApplication'
        sims:
          type: array
          items:
            type: string
        name:
          type: string
          maxLength: 64
        type:
          $ref: '#/components/schemas/TypeEnum'
        webhooks:
          type: object
          additionalProperties: {}
          nullable: true
        activated:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        meta:
          type: object
          additionalProperties: {}
          nullable: true
        firmware:
          type: string
          nullable: true
        organisation:
          type: string
          format: uuid
        configuration:
          type: string
          nullable: true
      required:
      - application
      - created_at
      - name
      - organisation
      - sims
    DefaultToken:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        alias:
          type: string
          maxLength: 64
        activated:
          type: boolean
        expiry_date:
          type: string
          format: date-time
          nullable: true
        scope:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - alias
      - created_at
      - id
      - scope
      - url
    DeploymentRead:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        devices:
          type: array
          items:
            type: string
          readOnly: true
        firmware:
          type: string
        webhooks:
          type: object
          additionalProperties: {}
          nullable: true
        successful:
          type: string
          readOnly: true
        pending:
          type: string
          readOnly: true
        failed:
          type: string
          readOnly: true
        cancelled:
          type: string
          readOnly: true
        finished:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - cancelled
      - created_at
      - devices
      - failed
      - finished
      - firmware
      - id
      - pending
      - successful
      - url
    DeploymentWrite:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        devices:
          type: array
          items:
            type: string
        firmware:
          type: string
        webhooks:
          type: object
          additionalProperties: {}
          nullable: true
        successful:
          type: string
          readOnly: true
        pending:
          type: string
          readOnly: true
        failed:
          type: string
          readOnly: true
        finished:
          type: string
          readOnly: true
        cancelled:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - cancelled
      - created_at
      - devices
      - failed
      - finished
      - firmware
      - id
      - pending
      - successful
      - url
    DeviceConfigurationModel:
      type: object
      properties:
        id:
          type: string
          maxLength: 22
        alias:
          type: string
          maxLength: 64
        compression_support:
          type: boolean
        description:
          type: string
          nullable: true
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        ebv_firmware:
          type: string
          nullable: true
        app_firmware:
          type: string
          nullable: true
      required:
      - alias
      - created_at
    Event:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        device:
          type: string
          readOnly: true
        sim:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        payload:
          type: object
          additionalProperties: {}
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - device
      - id
      - payload
      - sim
      - type
      - url
    FileRead:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        key:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 255
        size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        meta:
          type: object
          additionalProperties: {}
          nullable: true
        content:
          type: string
          readOnly: true
        application:
          type: string
          format: uuid
          nullable: true
        action:
          type: integer
          nullable: true
        event:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - created_at
      - key
      - url
    FileUpdate:
      type: object
      properties:
        key:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 255
        meta:
          type: object
          additionalProperties: {}
          nullable: true
        application:
          type: string
          format: uuid
          nullable: true
      required:
      - key
    FileWrite:
      type: object
      properties:
        key:
          type: string
          readOnly: true
        file:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          nullable: true
        meta:
          type: object
          additionalProperties: {}
          nullable: true
        application:
          type: string
          format: uuid
          nullable: true
      required:
      - key
      - name
    Firmware:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        version:
          type: string
          maxLength: 32
        alias:
          type: string
          maxLength: 32
        dest:
          type: string
          default: EBV
        description:
          type: string
          nullable: true
          maxLength: 2048
        organisation:
          type: string
          format: uuid
        predecessor:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - alias
      - created_at
      - id
      - organisation
      - version
    FirmwareRead:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: string
          maxLength: 10
        version:
          type: string
          maxLength: 32
        alias:
          type: string
          maxLength: 32
        dest:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 2048
        predecessor:
          $ref: '#/components/schemas/SmallFirmwareRead'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - alias
      - created_at
      - dest
      - predecessor
      - url
      - version
    InnerApplication:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: string
          format: uuid
      required:
      - url
    InnerConnectionProfile:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        endpoint:
          type: string
          readOnly: true
      required:
      - endpoint
      - id
    InnerDevice:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
      required:
      - id
      - name
    LifecycleTypeEnum:
      enum:
      - action_sent
      - action_overridden
      - action_delivered
      - response_received
      - file_transfer_started
      - file_transfer_failed
      - file_transfer_complete
      type: string
    Network:
      type: object
      properties:
        mccmnc:
          type: string
          readOnly: true
        network_name:
          type: string
          maxLength: 64
      required:
      - mccmnc
      - network_name
    OTPVerifier:
      type: object
      properties:
        otp_code:
          type: string
      required:
      - otp_code
    ObtainTokenPairByKey:
      type: object
      properties:
        application_token:
          type: string
          writeOnly: true
          maxLength: 512
      required:
      - application_token
    Organisation:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 64
        line1:
          type: string
          maxLength: 64
        line2:
          type: string
          nullable: true
          maxLength: 16
        postal_code:
          type: string
          maxLength: 8
        city:
          type: string
          maxLength: 64
        country:
          type: string
          maxLength: 8
        max_token_lifespan_in_seconds:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - city
      - country
      - created_at
      - id
      - line1
      - name
      - postal_code
      - url
    PaginatedAccountReadList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/AccountRead'
    PaginatedActionLifecycleList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActionLifecycle'
    PaginatedActionReadList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActionRead'
    PaginatedBinaryList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Binary'
    PaginatedConnectionProfileList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionProfile'
    PaginatedDefaultApplicationList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/DefaultApplication'
    PaginatedDefaultDeviceList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/DefaultDevice'
    PaginatedDefaultTokenList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/DefaultToken'
    PaginatedDeploymentReadList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentRead'
    PaginatedDeviceConfigurationModelList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceConfigurationModel'
    PaginatedEventList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    PaginatedFileReadList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/FileRead'
    PaginatedFirmwareList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Firmware'
    PaginatedFirmwareReadList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/FirmwareRead'
    PaginatedOrganisationList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organisation'
    PaginatedReadDeviceList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReadDevice'
    PaginatedSIMList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/SIM'
    PaginatedSIMWriteList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/SIMWrite'
    PaginatedUpdateReadList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/UpdateRead'
    PasswordReset:
      type: object
      properties:
        password:
          type: string
        confirm_password:
          type: string
      required:
      - confirm_password
      - password
    PatchedAccountWrite:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/RoleEnum'
        otp_enabled:
          type: boolean
        otp_verified:
          type: string
          readOnly: true
        activated:
          type: boolean
        organisation_account:
          type: string
          readOnly: true
    PatchedActionPatch:
      type: object
      properties:
        cancelled:
          type: boolean
    PatchedCreateApplication:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        alias:
          type: string
          maxLength: 64
        description:
          type: string
          nullable: true
          maxLength: 64
        secret:
          type: string
          maxLength: 64
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedDeviceConfigurationModel:
      type: object
      properties:
        id:
          type: string
          maxLength: 22
        alias:
          type: string
          maxLength: 64
        compression_support:
          type: boolean
        description:
          type: string
          nullable: true
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        ebv_firmware:
          type: string
          nullable: true
        app_firmware:
          type: string
          nullable: true
    PatchedFileUpdate:
      type: object
      properties:
        key:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 255
        meta:
          type: object
          additionalProperties: {}
          nullable: true
        application:
          type: string
          format: uuid
          nullable: true
    PatchedFirmware:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        version:
          type: string
          maxLength: 32
        alias:
          type: string
          maxLength: 32
        dest:
          type: string
          default: EBV
        description:
          type: string
          nullable: true
          maxLength: 2048
        organisation:
          type: string
          format: uuid
        predecessor:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedSIMWrite:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        iccid:
          type: string
          readOnly: true
        device:
          type: string
        connection_profile:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUpdateDevice:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 64
        activated:
          type: boolean
        application:
          type: string
          format: uuid
          nullable: true
        webhooks:
          type: object
          additionalProperties: {}
          nullable: true
        meta:
          type: object
          additionalProperties: {}
          nullable: true
        sims:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUpdateOrganisation:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 64
        line1:
          type: string
          maxLength: 64
        line2:
          type: string
          nullable: true
          maxLength: 16
        postal_code:
          type: string
          maxLength: 8
        city:
          type: string
          maxLength: 64
        country:
          type: string
          maxLength: 8
        secret:
          type: string
          maxLength: 64
        max_token_lifespan_in_seconds:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
    ReadDevice:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 64
        activated:
          type: boolean
        application:
          $ref: '#/components/schemas/InnerApplication'
        type:
          $ref: '#/components/schemas/TypeEnum'
        webhooks:
          type: object
          additionalProperties: {}
          nullable: true
        meta:
          type: object
          additionalProperties: {}
          nullable: true
        sims:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - application
      - created_at
      - id
      - name
      - sims
      - url
    ResultCodeEnum:
      enum:
      - 0
      - 1
      type: integer
    RoleEnum:
      enum:
      - owner
      - admin
      - user
      type: string
    SIM:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        iccid:
          type: string
          readOnly: true
        device:
          $ref: '#/components/schemas/InnerDevice'
        connection_profile:
          $ref: '#/components/schemas/InnerConnectionProfile'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - connection_profile
      - created_at
      - device
      - iccid
      - url
    SIMWrite:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        iccid:
          type: string
          readOnly: true
        device:
          type: string
        connection_profile:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - connection_profile
      - created_at
      - iccid
      - url
    SmallDevice:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
      required:
      - id
      - name
    SmallFirmwareRead:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: string
          maxLength: 10
        alias:
          type: string
          maxLength: 32
      required:
      - alias
      - url
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TypeEnum:
      enum:
      - other
      - cellular
      type: string
    UpdateDevice:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 64
        activated:
          type: boolean
        application:
          type: string
          format: uuid
          nullable: true
        webhooks:
          type: object
          additionalProperties: {}
          nullable: true
        meta:
          type: object
          additionalProperties: {}
          nullable: true
        sims:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - url
    UpdateOrganisation:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 64
        line1:
          type: string
          maxLength: 64
        line2:
          type: string
          nullable: true
          maxLength: 16
        postal_code:
          type: string
          maxLength: 8
        city:
          type: string
          maxLength: 64
        country:
          type: string
          maxLength: 8
        secret:
          type: string
          maxLength: 64
        max_token_lifespan_in_seconds:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - city
      - country
      - created_at
      - id
      - line1
      - name
      - postal_code
      - url
    UpdateRead:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        deployment:
          type: integer
          readOnly: true
        device:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        webhooks:
          type: object
          additionalProperties: {}
          readOnly: true
        result:
          type: object
          additionalProperties: {}
          readOnly: true
        result_code:
          type: string
        finished:
          type: string
          readOnly: true
        cancelled:
          type: boolean
          readOnly: true
        changed_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - cancelled
      - changed_at
      - created_at
      - deployment
      - device
      - finished
      - id
      - result
      - result_code
      - status
      - url
      - webhooks
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: embever_cookie_session_id_development
